name: CI/CD Pipeline

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
          - staging
          - production
        
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.BBDEPLOYMENT_DOCKERHUB_USERNAME }}
          password: ${{ secrets.BBDEPLOYMENT_DOCKERHUB_PASSWORD }}

      - name: Set environment-specific variables
        run: |
          case "${{ inputs.environment }}" in
            production)
              echo "PUBLIC_BASE=https://kabbalahmedia.info/" >> $GITHUB_ENV
              echo "CDN_URL=https://cdn.kabbalahmedia.info/" >> $GITHUB_ENV
              echo "FEED_API_URL=https://kabbalahmedia.info/feed_api/" >> $GITHUB_ENV
              echo "PERSONAL_API_URL=https://kabbalahmedia.info/backend/my/" >> $GITHUB_ENV
              ;;
            staging)
              echo "PUBLIC_BASE=https://staging-archive.kabbalahmedia.info/" >> $GITHUB_ENV
              echo "CDN_URL=https://staging-cdn.kabbalahmedia.info/" >> $GITHUB_ENV
              echo "FEED_API_URL=https://staging-archive.kabbalahmedia.info/feed_api/" >> $GITHUB_ENV
              echo "PERSONAL_API_URL=https://staging-archive.kabbalahmedia.info/backend/my/" >> $GITHUB_ENV
              ;;
          esac
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            bneibaruch/kmedia_mdb:${{inputs.environment}}
            bneibaruch/kmedia_mdb:${{inputs.environment}}_${{github.run_number}}
          build-args: |
            public_base=${{env.PUBLIC_BASE}}
            cdn_url=${{env.CDN_URL}}
            feed_api_url=${{env.FEED_API_URL}}
            personal_api_url=${{env.PERSONAL_API_URL}}

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
      - name: Set deployment variables
        run: |
          if [[ "${{ github.event.inputs.environment }}" == "staging" ]]; then
            echo "SSH_HOST=${{ secrets.ARCHIVE_HOST_STAGING }}" >> $GITHUB_ENV
          else
            echo "SSH_HOST=${{ secrets.ARCHIVE_HOST_PRODUCTION }}" >> $GITHUB_ENV
          fi

      - name: Deploy to ${{ github.event.inputs.environment }} via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ env.SSH_HOST }}
          username: root
          key: ${{ secrets.BBDEPLOYMENT_SSH_PRIVATE_KEY }}
          proxy_host: ${{ secrets.SSH_PROXY_HOST }}
          proxy_username: ${{ secrets.SSH_PROXY_USERNAME }}
          proxy_key: ${{ secrets.BBDEPLOYMENT_SSH_PRIVATE_KEY }}
          script: |
            cd /root/archive-docker
            docker compose pull kmedia_mdb
            docker compose up -d --no-deps kmedia_mdb
